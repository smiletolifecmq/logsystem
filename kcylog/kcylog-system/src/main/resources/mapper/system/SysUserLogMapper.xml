<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcylog.system.mapper.SysUserLogMapper">

    <resultMap type="SysUserLog" id="SysUserLogResult">
        <result property="userLogId" column="user_log_id"/>
        <result property="userId" column="user_id"/>
        <result property="completeness" column="completeness"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <association property="dept" column="dept_name" javaType="SysDept" resultMap="userLogDeptResult"/>
        <association property="user" column="user_name" javaType="SysUser" resultMap="userLogUserResult"/>
    </resultMap>

    <resultMap id="userLogDeptResult" type="SysDept">
        <!--        <id     property="deptId"    column="dept_id"     />-->
        <!--        <result property="parentId"  column="parent_id"   />-->
        <result property="deptName" column="dept_name"/>
        <!--        <result property="ancestors" column="ancestors"   />-->
        <!--        <result property="orderNum"  column="order_num"   />-->
        <!--        <result property="leader"    column="leader"      />-->
        <!--        <result property="status"    column="dept_status" />-->
    </resultMap>

    <resultMap id="userLogUserResult" type="SysUser">
        <!--        <id     property="userId"       column="user_id"      />-->
        <!--        <result property="deptId"       column="dept_id"      />-->
        <result property="userName" column="user_name"/>
    </resultMap>

    <sql id="selectSysUserLogVo">
        select user_log_id, user_id, completeness, content, create_time, update_time
        from sys_user_log
    </sql>

    <select id="selectSysUserLogList" parameterType="SysUserLog" resultMap="SysUserLogResult">
        select l.user_log_id, l.user_id, l.completeness, l.content, l.create_time, l.update_time, u.user_name,
        d.dept_name from sys_user_log l
        inner join sys_user u on l.user_id = u.user_id
        inner join sys_dept d on u.dept_id = d.dept_id
        where u.del_flag = '0'
        <if test="userName != null and userName != ''">
            AND u.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="deptId != null and deptId != 0">
            AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId},
            ancestors) ))
        </if>
        <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(l.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
        </if>
        <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
            AND date_format(l.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        order by l.user_log_id desc
    </select>

    <select id="selectSysUserLogByUserLogId" parameterType="Long" resultMap="SysUserLogResult">
        <include refid="selectSysUserLogVo"/>
        where user_log_id = #{userLogId}
    </select>

    <!--    <insert id="insertSysUserLog" parameterType="SysUserLog" useGeneratedKeys="true" keyProperty="userLogId">-->
    <!--        insert into sys_user_log-->
    <!--        <trim prefix="(" suffix=")" suffixOverrides=",">-->
    <!--            <if test="userId != null">user_id,</if>-->
    <!--            <if test="completeness != null">completeness,</if>-->
    <!--            <if test="content != null">content,</if>-->
    <!--            <if test="createTime != null">create_time,</if>-->
    <!--            <if test="updateTime != null">update_time,</if>-->
    <!--        </trim>-->
    <!--        <trim prefix="values (" suffix=")" suffixOverrides=",">-->
    <!--            <if test="userId != null">#{userId},</if>-->
    <!--            <if test="completeness != null">#{completeness},</if>-->
    <!--            <if test="content != null">#{content},</if>-->
    <!--            <if test="createTime != null">#{createTime},</if>-->
    <!--            <if test="updateTime != null">#{updateTime},</if>-->
    <!--        </trim>-->
    <!--    </insert>-->
    <insert id="insertSysUserLog" parameterType="SysUserLog">
        insert into sys_user_log (user_id, completeness, content, create_time, update_time) values
        <foreach collection="logs" item="log" separator=",">
            (#{userId}, #{log.completeness}, #{log.content}, #{createTime}, #{updateTime})
        </foreach>
    </insert>


    <update id="updateSysUserLog" parameterType="SysUserLog">
        update sys_user_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="completeness != null">completeness = #{completeness},</if>
            <if test="content != null">content = #{content},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where user_log_id = #{userLogId}
    </update>

    <delete id="deleteSysUserLogByUserLogId" parameterType="Long">
        delete
        from sys_user_log
        where user_log_id = #{userLogId}
    </delete>

    <delete id="deleteSysUserLogByUserLogIds" parameterType="String">
        delete from sys_user_log where user_log_id in
        <foreach item="userLogId" collection="array" open="(" separator="," close=")">
            #{userLogId}
        </foreach>
    </delete>
</mapper>