<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcylog.system.mapper.SysGeoTypeMapper">
    
    <resultMap type="SysGeoType" id="SysGeoTypeResult">
        <result property="typeId"    column="type_id"    />
        <result property="typeName"    column="type_name"    />
        <result property="typeMoney"    column="type_money"    />
        <result property="parentId"    column="parent_id"    />
        <result property="remark"    column="remark"    />
        <result property="unit"    column="unit"    />
        <result property="degree"    column="degree"    />
    </resultMap>

    <sql id="selectSysGeoTypeVo">
        select type_id, type_name, type_money, parent_id, remark, unit, degree from sys_geo_type
    </sql>

    <select id="selectSysGeoTypeList" parameterType="SysGeoType" resultMap="SysGeoTypeResult">
        <include refid="selectSysGeoTypeVo"/>
        <where>  
            <if test="typeName != null  and typeName != ''"> and type_name like concat('%', #{typeName}, '%')</if>
            <if test="typeMoney != null "> and type_money = #{typeMoney}</if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="unit != null  and unit != ''"> and unit = #{unit}</if>
            <if test="degree != null "> and degree = #{degree}</if>
        </where>
    </select>
    
    <select id="selectSysGeoTypeByTypeId" parameterType="Long" resultMap="SysGeoTypeResult">
        <include refid="selectSysGeoTypeVo"/>
        where type_id = #{typeId}
    </select>
        
    <insert id="insertSysGeoType" parameterType="SysGeoType" useGeneratedKeys="true" keyProperty="typeId">
        insert into sys_geo_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeName != null and typeName != ''">type_name,</if>
            <if test="typeMoney != null">type_money,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="remark != null">remark,</if>
            <if test="unit != null">unit,</if>
            <if test="degree != null">degree,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeName != null and typeName != ''">#{typeName},</if>
            <if test="typeMoney != null">#{typeMoney},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="remark != null">#{remark},</if>
            <if test="unit != null">#{unit},</if>
            <if test="degree != null">#{degree},</if>
         </trim>
    </insert>

    <update id="updateSysGeoType" parameterType="SysGeoType">
        update sys_geo_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeName != null and typeName != ''">type_name = #{typeName},</if>
            <if test="typeMoney != null">type_money = #{typeMoney},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="unit != null">unit = #{unit},</if>
            <if test="degree != null">degree = #{degree},</if>
        </trim>
        where type_id = #{typeId}
    </update>

    <delete id="deleteSysGeoTypeByTypeId" parameterType="Long">
        delete from sys_geo_type where type_id = #{typeId}
    </delete>

    <delete id="deleteSysGeoTypeByTypeIds" parameterType="String">
        delete from sys_geo_type where type_id in 
        <foreach item="typeId" collection="array" open="(" separator="," close=")">
            #{typeId}
        </foreach>
    </delete>
</mapper>