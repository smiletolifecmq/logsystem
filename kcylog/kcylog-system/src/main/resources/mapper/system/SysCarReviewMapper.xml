<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcylog.system.mapper.SysCarReviewMapper">
    
    <resultMap type="SysCarReview" id="SysCarReviewResult">
        <result property="carReviewId"    column="car_review_id"    />
        <result property="recordTime"    column="record_time"    />
        <result property="userId"    column="user_id"    />
        <result property="deptId"    column="dept_id"    />
        <result property="reviewStatus"    column="review_status"    />
        <association property="dept" column="dept_name" javaType="SysDept" resultMap="sysReviewDeptResult"/>
        <association property="user" column="user_name" javaType="SysUser" resultMap="sysReviewUserResult"/>
        <association property="projectCar" javaType="java.util.List" resultMap="SysProjectCarResult"/>
    </resultMap>

    <resultMap type="SysProjectCar" id="SysProjectCarResult">
        <result property="carId"    column="car_id"    />
        <result property="projectId"    column="project_id"    />
        <result property="carReviewId"    column="car_review_id"    />
        <result property="projectName"    column="project_name"    />
        <result property="carNum"    column="car_num"    />
        <result property="carType"    column="car_type"    />
        <result property="number"    column="number"    />
        <result property="carExpenses"    column="car_expenses"    />
    </resultMap>

    <resultMap id="sysReviewDeptResult" type="SysDept">
        <result property="deptName" column="dept_name"/>
    </resultMap>

    <resultMap id="sysReviewUserResult" type="SysUser">
        <result property="userName" column="user_name"/>
    </resultMap>

    <sql id="selectSysCarReviewVo">
        select r.car_review_id, r.record_time, r.dept_id, r.review_status, d.dept_name, u.user_name, c.* from sys_car_review r
        inner join sys_dept d on r.dept_id = d.dept_id
        inner join sys_user u on r.user_id = u.user_id
        left join sys_project_car c on r.car_review_id = c.car_review_id
    </sql>

    <sql id="selectSysCarReviewList">
        select r.car_review_id, r.record_time, r.dept_id, r.review_status, d.dept_name, u.user_name from sys_car_review r
        inner join sys_dept d on r.dept_id = d.dept_id
        inner join sys_user u on r.user_id = u.user_id
    </sql>

    <select id="selectSysCarReviewList" parameterType="SysCarReview" resultMap="SysCarReviewResult">
        <include refid="selectSysCarReviewList"/>
        <where>  
            <if test="recordTime != null "> and r.record_time = #{recordTime}</if>
            <if test="userId != null "> and r.user_id = #{userId}</if>
            <if test="deptId != null "> and r.dept_id = #{deptId}</if>
            <if test="reviewStatus != null "> and r.review_status = #{reviewStatus}</if>
        </where>
        order by r.car_review_id desc
    </select>
    
    <select id="selectSysCarReviewByCarReviewId" parameterType="Long" resultMap="SysCarReviewResult">
        <include refid="selectSysCarReviewVo"/>
        where r.car_review_id = #{carReviewId}
    </select>
        
    <insert id="insertSysCarReview" parameterType="SysCarReview" useGeneratedKeys="true" keyProperty="carReviewId">
        insert into sys_car_review
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="recordTime != null">record_time,</if>
            <if test="userId != null">user_id,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="reviewStatus != null">review_status,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="recordTime != null">#{recordTime},</if>
            <if test="userId != null">#{userId},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="reviewStatus != null">#{reviewStatus},</if>
         </trim>
    </insert>

    <update id="updateSysCarReview" parameterType="SysCarReview">
        update sys_car_review
        <trim prefix="SET" suffixOverrides=",">
            <if test="recordTime != null">record_time = #{recordTime},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="reviewStatus != null">review_status = #{reviewStatus},</if>
        </trim>
        where car_review_id = #{carReviewId}
    </update>

    <delete id="deleteSysCarReviewByCarReviewId" parameterType="Long">
        delete from sys_car_review where car_review_id = #{carReviewId}
    </delete>

    <delete id="deleteSysCarReviewByCarReviewIds" parameterType="String">
        delete from sys_car_review where car_review_id in 
        <foreach item="carReviewId" collection="array" open="(" separator="," close=")">
            #{carReviewId}
        </foreach>
    </delete>

    <select id="checkProjectKeyUnique" parameterType="SysCarReview" resultMap="SysCarReviewResult">
        <include refid="selectSysCarReviewVo"/>
        where r.dept_id = #{deptId} and r.record_time = #{recordTime}
    </select>

    <update id="setSysReviewStatusByCarReviewId" parameterType="SysCarReview">
        update sys_car_review
        set review_status = #{reviewStatus}
        where car_review_id = #{carReviewId}
    </update>

    <select id="selectSysUpcomingReviewList" parameterType="SysCarReview" resultMap="SysCarReviewResult">
        <include refid="selectSysCarReviewList"/>
        inner join sys_car_review_process rp on r.car_review_id = rp.car_review_id
        <if test="recordTime != null "> and r.record_time = #{recordTime}</if>
        AND rp.user_id = #{userId}
        AND rp.status = 1
        order by r.car_review_id desc
    </select>

    <select id="selectSysDoneReviewList" parameterType="SysCarReview" resultMap="SysCarReviewResult">
        <include refid="selectSysCarReviewList"/>
        inner join sys_car_review_process rp on r.car_review_id = rp.car_review_id
        <if test="recordTime != null "> and r.record_time = #{recordTime}</if>
        AND rp.user_id = #{userId}
        AND (rp.status = 2 OR rp.status = 3)
        order by rp.review_time desc
    </select>
</mapper>