<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcylog.system.mapper.SysSubcontractProcessMapper">

    <resultMap type="SysSubcontractProcess" id="SysSubcontractProcessResult">
        <result property="subcontractProcessId" column="subcontract_process_id"/>
        <result property="subcontractId" column="subcontract_id"/>
        <result property="userId" column="user_id"/>
        <result property="status" column="status"/>
        <result property="node" column="node"/>
        <result property="reason" column="reason"/>
        <result property="reviewTime" column="review_time"/>
        <association property="user" column="user_name" javaType="SysUser" resultMap="sysReviewUserResult"/>
    </resultMap>

    <resultMap id="sysReviewUserResult" type="SysUser">
        <result property="userName" column="user_name"/>
    </resultMap>

    <sql id="selectSysSubcontractProcessVo">
        select rp.*, u.user_name
        from sys_subcontract_process rp
                 inner join sys_user u on rp.user_id = u.user_id
    </sql>

    <select id="selectSysSubcontractProcessList" parameterType="SysSubcontractProcess"
            resultMap="SysSubcontractProcessResult">
        <include refid="selectSysSubcontractProcessVo"/>
        <where>
            <if test="subcontractId != null ">and subcontract_id = #{subcontractId}</if>
        </where>
        order by node asc
    </select>

    <select id="selectSysSubcontractProcessBySubcontractProcessId" parameterType="Long"
            resultMap="SysSubcontractProcessResult">
        <include refid="selectSysSubcontractProcessVo"/>
        where subcontract_process_id = #{subcontractProcessId}
    </select>

    <insert id="insertSysSubcontractProcess" parameterType="SysSubcontractProcess" useGeneratedKeys="true"
            keyProperty="subcontractProcessId">
        insert into sys_subcontract_process
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="subcontractId != null">subcontract_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="status != null">status,</if>
            <if test="node != null">node,</if>
            <if test="reason != null">reason,</if>
            <if test="reviewTime != null">review_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="subcontractId != null">#{subcontractId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="status != null">#{status},</if>
            <if test="node != null">#{node},</if>
            <if test="reason != null">#{reason},</if>
            <if test="reviewTime != null">#{reviewTime},</if>
        </trim>
    </insert>

    <update id="updateSysSubcontractProcess" parameterType="SysSubcontractProcess">
        update sys_subcontract_process
        <trim prefix="SET" suffixOverrides=",">
            <if test="subcontractId != null">subcontract_id = #{subcontractId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="node != null">node = #{node},</if>
            <if test="reason != null">reason = #{reason},</if>
            <if test="reviewTime != null">review_time = #{reviewTime},</if>
        </trim>
        where subcontract_process_id = #{subcontractProcessId}
    </update>

    <delete id="deleteSysSubcontractProcessBySubcontractProcessId" parameterType="Long">
        delete
        from sys_subcontract_process
        where subcontract_process_id = #{subcontractProcessId}
    </delete>

    <delete id="deleteSysSubcontractProcessBySubcontractProcessIds" parameterType="String">
        delete from sys_subcontract_process where subcontract_process_id in
        <foreach item="subcontractProcessId" collection="array" open="(" separator="," close=")">
            #{subcontractProcessId}
        </foreach>
    </delete>

    <insert id="insertSysSubcontractProcessBatch" parameterType="java.util.List">
        insert into sys_subcontract_process (subcontract_id, user_id, status, node, reason, review_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.subcontractId}, #{item.userId}, #{item.status}, #{item.node}, #{item.reason}, #{item.reviewTime})
        </foreach>
    </insert>

    <delete id="deleteSysSubcontractProcessByReviewIds" parameterType="String">
        delete from sys_subcontract_process where subcontract_id in
        <foreach item="subcontractId" collection="array" open="(" separator="," close=")">
            #{subcontractId}
        </foreach>
    </delete>

    <update id="setStatusNotStartBySubcontractId" parameterType="Long">
        UPDATE sys_subcontract_process
        set status      = 0,
            review_time = NULL
        where subcontract_id = #{subcontractId}
    </update>

    <update id="setStatusBySubcontractIdFirst" parameterType="Long">
        UPDATE sys_subcontract_process AS r1
            INNER JOIN (
            SELECT subcontract_process_id
            FROM sys_subcontract_process
            WHERE subcontract_id = #{subcontractId}
            ORDER BY node ASC
            LIMIT 1
            ) AS r2
        ON r1.subcontract_process_id = r2.subcontract_process_id
            SET r1.status = 1;
    </update>

    <update id="setStatusByUserIdAndSubcontractId" parameterType="SysSubcontractProcess">
        UPDATE sys_subcontract_process
        set status      = #{status},
            reason      = #{reason},
            review_time = #{reviewTime}
        where subcontract_id = #{subcontractId}
          AND user_id = #{userId}
    </update>

    <update id="setNextStatusBySubcontractId" parameterType="Long">
        UPDATE sys_subcontract_process
        SET status = 1
        WHERE subcontract_process_id IN (
            SELECT t.subcontract_process_id
            FROM (
                     SELECT subcontract_process_id
                     FROM sys_subcontract_process
                     WHERE subcontract_id = #{subcontractId}
                       AND status = 0
                     ORDER BY node ASC LIMIT 1
                 ) AS t
        );
    </update>
</mapper>