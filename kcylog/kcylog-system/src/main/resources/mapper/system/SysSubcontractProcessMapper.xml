<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcylog.system.mapper.SysSubcontractProcessMapper">
    
    <resultMap type="SysSubcontractProcess" id="SysSubcontractProcessResult">
        <result property="subcontractProcessId"    column="subcontract_process_id"    />
        <result property="subcontractId"    column="subcontract_id"    />
        <result property="userId"    column="user_id"    />
        <result property="status"    column="status"    />
        <result property="node"    column="node"    />
        <result property="reason"    column="reason"    />
        <result property="reviewTime"    column="review_time"    />
    </resultMap>

    <sql id="selectSysSubcontractProcessVo">
        select subcontract_process_id, subcontract_id, user_id, status, node, reason, review_time from sys_subcontract_process
    </sql>

    <select id="selectSysSubcontractProcessList" parameterType="SysSubcontractProcess" resultMap="SysSubcontractProcessResult">
        <include refid="selectSysSubcontractProcessVo"/>
        <where>  
            <if test="subcontractId != null "> and subcontract_id = #{subcontractId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="node != null "> and node = #{node}</if>
            <if test="reason != null  and reason != ''"> and reason = #{reason}</if>
            <if test="reviewTime != null "> and review_time = #{reviewTime}</if>
        </where>
    </select>
    
    <select id="selectSysSubcontractProcessBySubcontractProcessId" parameterType="Long" resultMap="SysSubcontractProcessResult">
        <include refid="selectSysSubcontractProcessVo"/>
        where subcontract_process_id = #{subcontractProcessId}
    </select>
        
    <insert id="insertSysSubcontractProcess" parameterType="SysSubcontractProcess" useGeneratedKeys="true" keyProperty="subcontractProcessId">
        insert into sys_subcontract_process
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="subcontractId != null">subcontract_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="status != null">status,</if>
            <if test="node != null">node,</if>
            <if test="reason != null">reason,</if>
            <if test="reviewTime != null">review_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="subcontractId != null">#{subcontractId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="status != null">#{status},</if>
            <if test="node != null">#{node},</if>
            <if test="reason != null">#{reason},</if>
            <if test="reviewTime != null">#{reviewTime},</if>
         </trim>
    </insert>

    <update id="updateSysSubcontractProcess" parameterType="SysSubcontractProcess">
        update sys_subcontract_process
        <trim prefix="SET" suffixOverrides=",">
            <if test="subcontractId != null">subcontract_id = #{subcontractId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="node != null">node = #{node},</if>
            <if test="reason != null">reason = #{reason},</if>
            <if test="reviewTime != null">review_time = #{reviewTime},</if>
        </trim>
        where subcontract_process_id = #{subcontractProcessId}
    </update>

    <delete id="deleteSysSubcontractProcessBySubcontractProcessId" parameterType="Long">
        delete from sys_subcontract_process where subcontract_process_id = #{subcontractProcessId}
    </delete>

    <delete id="deleteSysSubcontractProcessBySubcontractProcessIds" parameterType="String">
        delete from sys_subcontract_process where subcontract_process_id in 
        <foreach item="subcontractProcessId" collection="array" open="(" separator="," close=")">
            #{subcontractProcessId}
        </foreach>
    </delete>

    <insert id="insertSysSubcontractProcessBatch" parameterType="java.util.List">
        insert into sys_subcontract_process (subcontract_id, user_id, status, node, reason, review_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.subcontractId}, #{item.userId}, #{item.status}, #{item.node}, #{item.reason}, #{item.reviewTime})
        </foreach>
    </insert>
</mapper>